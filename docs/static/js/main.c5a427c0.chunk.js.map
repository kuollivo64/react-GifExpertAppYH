{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GitExpertApp","categorias","category","ReactDOM","render","document","getElementById"],"mappings":"mLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,mCACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKd,SACI,uBAAOO,KAAK,OACZC,MAAUT,EACVU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCNlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAmB,IAAjBnB,EAAgB,EAAhBA,UAAgB,ECDd,SAAEA,GAAgB,IAAD,EACfd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH4B,mBAClCC,EADkC,KAC3BC,EAD2B,KAgBzC,OAXAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EACI,CACIf,KAAMkB,EACNL,SAAS,SAG1B,CAAEpB,IACEqB,EDd2BK,CAAc1B,GAAlCa,EADwB,EAC9BN,KAAca,EADgB,EAChBA,QACtB,OACI,qCACI,qBAAIJ,UAAU,oCAAd,cAAoDhB,EAApD,OACEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIC,aEetBgB,EAxBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAGvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ2C,EAAWnB,KAAK,SAAAoB,GAAQ,OACpB,cAAC,EAAD,CAEA7B,UAAW6B,GADNA,Y,sBCV7BC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c5a427c0.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ( {setCategorias} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log('ENTER XD');\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategorias( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async ( categoria ) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=ZY7uUG7OkglfM1OtIETaRbdouWfkjF1M`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();    \r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ categoria }) => {\r\n    const { data: images, loading } = useFetchGifs( categoria );\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {categoria} </h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\">               \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n ","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() =>{\r\n        getGifs( categoria )\r\n            .then( imgs =>{\r\n\r\n                setState(\r\n                    {\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            });\r\n    }, [ categoria ]);\r\n    return state;\r\n};","import React, { useState } from 'react'\r\nimport {AddCategory} from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n//Funcional component\r\nconst GitExpertApp = () => {\r\n    \r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n    return(\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategorias={ setCategorias }/>\r\n            <hr />\r\n            <ol>\r\n                {\r\n                    categorias.map( category =>\r\n                        <GifGrid \r\n                        key={category}\r\n                        categoria={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GitExpertApp;","import React from 'react';\nimport GitExpertApp from './GitExpertApp';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GitExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}